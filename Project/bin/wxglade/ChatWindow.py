# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.4 on Tue Oct  8 16:54:25 2024
#

import wx
from wx import html2

from Project.bin.Scripts.Global import GlobalVars
# begin wxGlade: extracode
from Project.bin.wxglade_overrides.Spellchek_TextCtrl import SpellCheckTextCtrl


# begin wxGlade: dependencies
# end wxGlade
# end wxGlade


class ChatWindow(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ChatWindow.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((375, 375))
        self.SetTitle("Chat Window")

        # Tool Bar
        self.ChatWindow_toolbar = wx.ToolBar(self, -1,
                                             style=wx.TB_DEFAULT_STYLE | wx.TB_HORZ_TEXT | wx.TB_NODIVIDER | wx.TB_NOICONS)
        tool = self.ChatWindow_toolbar.AddTool(wx.ID_ANY, "Settings", wx.Bitmap(16, 16), wx.NullBitmap, wx.ITEM_NORMAL,
                                               "Opens Settings", "")
        self.Bind(wx.EVT_TOOL, self.OpenSettings, id=tool.GetId())
        tool = self.ChatWindow_toolbar.AddTool(wx.ID_ANY, "Clear Chat", wx.Bitmap(16, 16), wx.NullBitmap,
                                               wx.ITEM_NORMAL, "Clears Chat", "")
        self.Bind(wx.EVT_TOOL, self.ClearChat, id=tool.GetId())
        tool = self.ChatWindow_toolbar.AddTool(wx.ID_ANY, "Fortunes", wx.Bitmap(16, 16), wx.NullBitmap, wx.ITEM_NORMAL,
                                               "Hear your fortune!", "")
        self.Bind(wx.EVT_TOOL, self.Fortunes, id=tool.GetId())
        self.SetToolBar(self.ChatWindow_toolbar)
        self.ChatWindow_toolbar.Realize()
        # Tool Bar end
        self.ChatWindow_toolbar.AddStretchableSpace()

        self.splitter_window = wx.SplitterWindow(self, wx.ID_ANY, style=wx.SP_3D | wx.SP_LIVE_UPDATE)
        self.splitter_window.SetMinimumPaneSize(75)
        self.splitter_window.SetSashGravity(1.0)

        self.panel_chat_window = wx.Panel(self.splitter_window, wx.ID_ANY)
        self.panel_chat_window.SetBackgroundColour(wx.Colour(18, 18, 18))

        sizer_4 = wx.BoxSizer(wx.VERTICAL)

        self.panel_chat_log = wx.Panel(self.panel_chat_window, wx.ID_ANY, style=wx.BORDER_NONE | wx.TAB_TRAVERSAL)
        sizer_4.Add(self.panel_chat_log, 1, wx.EXPAND | wx.RESERVE_SPACE_EVEN_IF_HIDDEN, 0)

        self.sizer_1 = wx.BoxSizer(wx.VERTICAL)

        # https://stackoverflow.com/questions/63442443/how-to-enable-edge-as-a-backhand-for-wx-html2-webview-in-wxpython
        # https://docs.wxpython.org/wx.html2.WebView.html?highlight=webview#wx.html2.WebView.GetBackendVersionInfo
        # https://docs.wxwidgets.org/latest/classwx_web_view.html#wxWEBVIEW_BACKEND_EDGE
        self.html_chat_log = html2.WebView.New(self.panel_chat_log, wx.ID_ANY, style=wx.NO_BORDER,
                                               backend=wx.html2.WebViewBackendEdge)
        self.html_chat_log.SetBackgroundColour(wx.Colour(19, 19, 19))
        self.html_chat_log.EnableHistory(False)
        self.html_chat_log.EnableContextMenu(False)
        self.html_chat_log.EnableAccessToDevTools(False)
        print("Backend version string: " + self.html_chat_log.GetBackendVersionInfo().VersionString)
        print("Is backend available: " + str(wx.html2.WebView.IsBackendAvailable(wx.html2.WebViewBackendEdge)))
        self.html_chat_log.SetPage(GlobalVars.html_template_code, "")
        self.sizer_1.Add(self.html_chat_log, 1, wx.EXPAND, 0)

        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(sizer_5, 0, wx.EXPAND | wx.RESERVE_SPACE_EVEN_IF_HIDDEN, 0)

        self.TypingUser = wx.StaticText(self.panel_chat_window, wx.ID_ANY, "")
        self.TypingUser.SetBackgroundColour(wx.Colour(18, 18, 18))
        self.TypingUser.SetForegroundColour(wx.Colour(227, 227, 227))
        sizer_5.Add(self.TypingUser, 1, wx.BOTTOM | wx.EXPAND | wx.LEFT | wx.RESERVE_SPACE_EVEN_IF_HIDDEN, 5)

        self.button_easteregg = wx.Button(self.panel_chat_window, wx.ID_ANY, "", style=wx.BORDER_NONE)
        self.button_easteregg.SetMinSize((15, 21))
        self.button_easteregg.SetBackgroundColour(wx.Colour(44, 44, 44))
        sizer_5.Add(self.button_easteregg, 0, wx.ALL | wx.RESERVE_SPACE_EVEN_IF_HIDDEN, 0)

        self.panel_send = wx.Panel(self.splitter_window, wx.ID_ANY)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)

        static_line_1 = wx.StaticLine(self.panel_send, wx.ID_ANY)
        sizer_2.Add(static_line_1, 0, wx.ALL | wx.EXPAND, 0)

        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)

        self.Send = wx.Button(self.panel_send, wx.ID_ANY, "Send")
        self.Send.SetMinSize((75, 30))
        sizer_3.Add(self.Send, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)

        self.text_ctrl_message = SpellCheckTextCtrl(self.panel_send, wx.ID_ANY, "",
                                                    style=wx.TE_AUTO_URL | wx.TE_BESTWRAP | wx.TE_MULTILINE | wx.TE_PROCESS_ENTER)
        sizer_3.Add(self.text_ctrl_message, 1, wx.ALL | wx.EXPAND, 5)

        sizer_6 = wx.StaticBoxSizer(wx.StaticBox(self.panel_send, wx.ID_ANY, ""), wx.HORIZONTAL)
        sizer_2.Add(sizer_6, 0, wx.EXPAND, 0)

        # Space is necessaryso dot doesn't get overlapped
        self.StatusConnected = wx.StaticText(self.panel_send, wx.ID_ANY, u"â¬¤ ", style=wx.ALIGN_LEFT)
        self.StatusConnected.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
        sizer_6.Add(self.StatusConnected, 0, wx.RIGHT, 4)

        self.StatusDevice = wx.StaticText(self.panel_send, wx.ID_ANY, "CADD-88")
        sizer_6.Add(self.StatusDevice, 0, wx.EXPAND | wx.RIGHT, 4)

        sizer_6.Add((0, 0), 1, wx.EXPAND, 0)

        static_line_2 = wx.StaticLine(self.panel_send, wx.ID_ANY, style=wx.LI_VERTICAL)
        sizer_6.Add(static_line_2, 0, wx.EXPAND | wx.RIGHT, 4)

        self.StatusCharacters = wx.StaticText(self.panel_send, wx.ID_ANY, "0/256 Characters")
        sizer_6.Add(self.StatusCharacters, 0, wx.EXPAND | wx.RIGHT, 0)

        self.panel_send.SetSizer(sizer_2)

        self.panel_chat_log.SetSizer(self.sizer_1)

        self.panel_chat_window.SetSizer(sizer_4)

        self.splitter_window.SplitHorizontally(self.panel_chat_window, self.panel_send, 218)

        self.Layout()
        self.SetMinSize(wx.Size(375, 375))
        self.SetName("ChatWindow")

        self.Bind(wx.html2.EVT_WEBVIEW_SCRIPT_MESSAGE_RECEIVED, self.on_script_message, self.html_chat_log)
        self.Bind(wx.EVT_BUTTON, self.EasterEgg, self.button_easteregg)
        self.Bind(wx.EVT_BUTTON, self.SendMessage, self.Send)
        self.Bind(wx.EVT_CLOSE, self.OnClose, self)
        self.Bind(wx.EVT_SHOW, self.OnOpen, self)
        self.Bind(wx.EVT_SIZE, self.OnResize, self)
        # end wxGlade

    def OpenSettings(self, event):  # wxGlade: ChatWindow.<event_handler>
        print("Event handler 'OpenSettings' not implemented!")
        event.Skip()

    def ClearChat(self, event):  # wxGlade: ChatWindow.<event_handler>
        print("Event handler 'ClearChat' not implemented!")
        event.Skip()

    def Fortunes(self, event):  # wxGlade: ChatWindow.<event_handler>
        print("Event handler 'Fortunes' not implemented!")
        event.Skip()

    def on_script_message(self, event):  # wxGlade: ChatWindow.<event_handler>
        print("Event handler 'on_script_message' not implemented!")
        event.Skip()

    def EasterEgg(self, event):  # wxGlade: ChatWindow.<event_handler>
        print("Event handler 'EasterEgg' not implemented!")
        event.Skip()

    def SendMessage(self, event):  # wxGlade: ChatWindow.<event_handler>
        print("Event handler 'SendMessage' not implemented!")
        event.Skip()

    def OnClose(self, event):  # wxGlade: ChatWindow.<event_handler>
        print("Event handler 'OnClose' not implemented!")
        event.Skip()

    def OnOpen(self, event):  # wxGlade: ChatWindow.<event_handler>
        print("Event handler 'OnOpen' not implemented!")
        event.Skip()

    def OnResize(self, event):  # wxGlade: ChatWindow.<event_handler>
        print("Event handler 'OnResize' not implemented!")
        event.Skip()

# end of class ChatWindow
