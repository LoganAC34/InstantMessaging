# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0 on Fri Apr 11 11:32:40 2025
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class SettingsWindow(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: SettingsWindow.__init__
        kwds["style"] = kwds.get("style", 0) | wx.CAPTION | wx.CLIP_CHILDREN | wx.CLOSE_BOX | wx.FRAME_FLOAT_ON_PARENT | wx.FRAME_NO_TASKBAR | wx.STAY_ON_TOP | wx.SYSTEM_MENU | wx.TAB_TRAVERSAL
        wx.Frame.__init__(self, *args, **kwds)
        self.SetTitle("Settings")
        self.SetFocus()

        self.panel_Main = wx.Panel(self, wx.ID_ANY)

        self.sizer_Main = wx.BoxSizer(wx.VERTICAL)

        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_Main.Add(sizer_1, 1, wx.EXPAND, 0)

        self.Color_Theme = wx.Button(self.panel_Main, wx.ID_ANY, "Color Theme")
        self.Color_Theme.SetMinSize((-1, 30))
        sizer_1.Add(self.Color_Theme, 0, wx.ALL, 5)

        self.About = wx.Button(self.panel_Main, wx.ID_ANY, "About")
        self.About.SetMinSize((-1, 30))
        sizer_1.Add(self.About, 0, wx.BOTTOM | wx.RIGHT | wx.TOP, 5)

        sizer_LocalUser = wx.StaticBoxSizer(wx.StaticBox(self.panel_Main, wx.ID_ANY, "Local User"), wx.HORIZONTAL)
        self.sizer_Main.Add(sizer_LocalUser, 0, wx.EXPAND | wx.LEFT | wx.RIGHT | wx.TOP, 5)

        label_Local_Name = wx.StaticText(sizer_LocalUser.GetStaticBox(), wx.ID_ANY, "Name:")
        label_Local_Name.SetMinSize((40, 20))
        sizer_LocalUser.Add(label_Local_Name, 0, wx.ALL, 2)

        self.text_ctrl_Local_Name = wx.TextCtrl(sizer_LocalUser.GetStaticBox(), wx.ID_ANY, "")
        self.text_ctrl_Local_Name.SetMinSize((150, 20))
        self.text_ctrl_Local_Name.Bind(wx.EVT_CHAR, self.OnChar, self.text_ctrl_Local_Name)
        sizer_LocalUser.Add(self.text_ctrl_Local_Name, 1, wx.ALL | wx.EXPAND, 2)

        label_RemoteUsers = wx.StaticText(self.panel_Main, wx.ID_ANY, "Remote Users:")
        self.sizer_Main.Add(label_RemoteUsers, 0, wx.LEFT | wx.TOP, 5)

        self.sizer_RemoteUsers = wx.BoxSizer(wx.VERTICAL)
        self.sizer_Main.Add(self.sizer_RemoteUsers, 0, 0, 0)

        self.button_AddUser = wx.Button(self.panel_Main, wx.ID_ANY, "+")
        self.button_AddUser.SetMinSize((30, 30))
        self.button_AddUser.SetForegroundColour(wx.Colour(0, 195, 0))
        self.button_AddUser.SetFont(wx.Font(14, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        self.sizer_Main.Add(self.button_AddUser, 1, wx.BOTTOM | wx.LEFT | wx.TOP, 5)

        sizer_ApplyCancel = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_Main.Add(sizer_ApplyCancel, 0, wx.ALL | wx.EXPAND, 0)

        self.button_Apply = wx.Button(self.panel_Main, wx.ID_ANY, "Apply")
        self.button_Apply.SetMinSize((75, 30))
        sizer_ApplyCancel.Add(self.button_Apply, 1, wx.ALL | wx.EXPAND, 5)

        self.button_Cancel = wx.Button(self.panel_Main, wx.ID_ANY, "Cancel")
        self.button_Cancel.SetMinSize((75, 30))
        sizer_ApplyCancel.Add(self.button_Cancel, 1, wx.ALL | wx.EXPAND, 5)

        self.panel_Main.SetSizer(self.sizer_Main)

        self.sizer_Main.Fit(self)
        self.Layout()

        self.Color_Theme.Bind(wx.EVT_BUTTON, self.on_click_edit_colors)
        self.About.Bind(wx.EVT_BUTTON, self.on_click_about)
        self.button_AddUser.Bind(wx.EVT_BUTTON, self.Add_OnClick)
        self.button_Apply.Bind(wx.EVT_BUTTON, self.Apply_OnClick)
        self.button_Cancel.Bind(wx.EVT_BUTTON, self.Cancel_OnClick)
        self.Bind(wx.EVT_CLOSE, self.OnClose)
        # end wxGlade

    def on_click_edit_colors(self, event):  # wxGlade: SettingsWindow.<event_handler>
        print("Event handler 'on_click_edit_colors' not implemented!")
        event.Skip()

    def on_click_about(self, event):  # wxGlade: SettingsWindow.<event_handler>
        print("Event handler 'on_click_about' not implemented!")
        event.Skip()

    def Add_OnClick(self, event):  # wxGlade: SettingsWindow.<event_handler>
        print("Event handler 'Add_OnClick' not implemented!")
        event.Skip()

    def Apply_OnClick(self, event):  # wxGlade: SettingsWindow.<event_handler>
        print("Event handler 'Apply_OnClick' not implemented!")
        event.Skip()

    def Cancel_OnClick(self, event):  # wxGlade: SettingsWindow.<event_handler>
        print("Event handler 'Cancel_OnClick' not implemented!")
        event.Skip()

    def OnClose(self, event):  # wxGlade: SettingsWindow.<event_handler>
        print("Event handler 'OnClose' not implemented!")
        event.Skip()

# end of class SettingsWindow
