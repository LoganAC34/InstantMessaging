# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0 on Fri Apr 11 11:32:40 2025
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
from wx.lib.floatcanvas import FloatCanvas
from wx.lib.floatcanvas.FCObjects import ScaledBitmap
# end wxGlade


class ImageViewerWindow(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ImageViewerWindow.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((425, 324))
        self.SetTitle("Image Viewer")

        # Tool Bar
        self.ImageViewer_toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.ImageViewer_toolbar)
        self.ImageViewer_toolbar.Realize()
        # Tool Bar end

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        self.Canvas = FloatCanvas.FloatCanvas(self, wx.ID_ANY)
        sizer_1.Add(self.Canvas, 1, wx.EXPAND, 0)

        self.dev_info = wx.StaticText(self, wx.ID_ANY, "Dev")
        self.dev_info.Hide()
        sizer_1.Add(self.dev_info, 0, wx.ALL, 1)

        self.SetSizer(sizer_1)

        self.Layout()

        self.Canvas.Bind(wx.EVT_LEAVE_WINDOW, self.on_left_up)
        self.Canvas.Bind(wx.EVT_LEFT_DCLICK, self.ZoomToFit)
        self.Canvas.Bind(wx.EVT_LEFT_DOWN, self.on_left_down)
        self.Canvas.Bind(wx.EVT_LEFT_UP, self.on_left_up)
        self.Canvas.Bind(wx.EVT_MOTION, self.on_motion)
        self.Canvas.Bind(wx.EVT_MOUSEWHEEL, self.on_mousewheel)
        self.Bind(wx.EVT_CLOSE, self.on_close)
        self.Bind(wx.EVT_FULLSCREEN, self.on_resize)
        self.Bind(wx.EVT_MAXIMIZE, self.on_resize)
        self.Bind(wx.EVT_MENU_CLOSE, self.on_close)
        self.Bind(wx.EVT_SIZING, self.on_resize)
        # end wxGlade

    def on_left_up(self, event):  # wxGlade: ImageViewerWindow.<event_handler>
        print("Event handler 'on_left_up' not implemented!")
        event.Skip()

    def ZoomToFit(self, event):  # wxGlade: ImageViewerWindow.<event_handler>
        print("Event handler 'ZoomToFit' not implemented!")
        event.Skip()

    def on_left_down(self, event):  # wxGlade: ImageViewerWindow.<event_handler>
        print("Event handler 'on_left_down' not implemented!")
        event.Skip()

    def on_motion(self, event):  # wxGlade: ImageViewerWindow.<event_handler>
        print("Event handler 'on_motion' not implemented!")
        event.Skip()

    def on_mousewheel(self, event):  # wxGlade: ImageViewerWindow.<event_handler>
        print("Event handler 'on_mousewheel' not implemented!")
        event.Skip()

    def on_close(self, event):  # wxGlade: ImageViewerWindow.<event_handler>
        print("Event handler 'on_close' not implemented!")
        event.Skip()

    def on_resize(self, event):  # wxGlade: ImageViewerWindow.<event_handler>
        print("Event handler 'on_resize' not implemented!")
        event.Skip()

# end of class ImageViewerWindow
